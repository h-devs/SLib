apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.SDK_VERSION

    defaultConfig {
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.SDK_VERSION
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME
        externalNativeBuild {
            cmake {
                targets 'slib'
                arguments '-DANDROID_ARM_MODE=arm', '-DANDROID_ARM_NEON=TRUE', '-DANDROID_STL=c++_static'
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            jniDebuggable true
        }
        release {
            minifyEnabled false
        }
    }

    sourceSets {
        main.java.srcDirs += '../../../java/android'
        main.java.srcDirs += '../../../java/android_offline'
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

repositories {
    flatDir{
        dirs "../../../external/bin/Android"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
    implementation project(':external_ShortcutBadger')

    compileOnly ":support-annotations-$SUPPORT_VERSION@jar"
    compileOnly ":support-compat-$SUPPORT_VERSION@aar"
    compileOnly ":support-core-ui-$SUPPORT_VERSION@aar"
    compileOnly ":support-core-utils-$SUPPORT_VERSION@aar"

}

rootProject.ext.setLibraryOutput(this, "slib", "slib")